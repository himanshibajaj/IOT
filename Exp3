#define BLYNK_TEMPLATE_ID "TMPL34XZr63KO"
#define BLYNK_TEMPLATE_NAME "Led Blink"
#define BLYNK_AUTH_TOKEN "qVmqLOSUwG4AUa8x0KTTwq_MeYGaWma8"

#define DHTTYPE DHT11
#define BLYNK_PRINT Serial
#define DHT_PIN 4

#include <DHT.h>
#include <DHT_U.h>
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

DHT dht(DHT_PIN, DHTTYPE);
char auth[] = BLYNK_AUTH_TOKEN;
char ssid[] = "";
char pass[] = "";
float t;
float h;

void setup() {
  Serial.begin(115200);
  delay(100);
  WiFi.begin(ssid, pass);
  Serial.print("Connecting to WiFi");
  int attempt = 0;
  while (WiFi.status() != WL_CONNECTED && attempt < 15) {
    delay(1000);
    Serial.print(".");
    attempt++;
  }
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\nConnected to WiFi!");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());
  } else {
    Serial.println("\nFailed to connect to WiFi. Check credentials.");
  }
  Blynk.begin(auth, ssid, pass);
  dht.begin();
  Serial.println("DHT sensor initialized");
}

void sendUptime() {
  h = dht.readHumidity();
  t = dht.readTemperature();
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }
  Serial.println("\nHumidity and Temperature:");
  Serial.print("Kshitij 47 | Sarthak 40 | Mahek 31 Current humidity = ");
  Serial.print(h);
  Serial.print("%, Temperature = ");
  Serial.print(t);
  Serial.println("Â°C");
  Blynk.virtualWrite(V0, t);
  Blynk.virtualWrite(V1, h);
}

void loop() {
  Blynk.run();
  static unsigned long lastUpdate = 0;
  if (millis() - lastUpdate >= 2000) {
    sendUptime();
    lastUpdate = millis();
  }
}
