#include <ESP8266WiFi.h>
#include <DHT.h>
#include <NTPClient.h>
#include <WiFiUdp.h>

#define DHTPIN 4           // Pin where the sensor is connected
#define DHTTYPE DHT22      // DHT 11 or DHT 22
DHT dht(DHTPIN, DHTTYPE);

const char* ssid = "Your_WiFi_Name";
const char* password = "Your_WiFi_Password";

WiFiServer server(80);  // Web server running on port 80

WiFiUDP udp;
NTPClient timeClient(udp, "pool.ntp.org", 0);  // Use GMT as time zone (0)

void setup() {
  Serial.begin(115200);
  dht.begin();
  
  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  
  Serial.println("Connected to WiFi");
  server.begin();

  timeClient.begin();
}

void loop() {
  WiFiClient client = server.available();
  
  if (client) {
    String currentTime = "";
    timeClient.update();
    currentTime = timeClient.getFormattedTime();

    // Get the current date in format "DD/MM/YYYY"
    String currentDate = timeClient.getDay() < 10 ? "0" + String(timeClient.getDay()) : String(timeClient.getDay());
    currentDate += "/";
    currentDate += timeClient.getMonth() < 10 ? "0" + String(timeClient.getMonth()) : String(timeClient.getMonth());
    currentDate += "/";
    currentDate += timeClient.getYear();

    // Read temperature and humidity
    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();

    if (isnan(humidity) || isnan(temperature)) {
      Serial.println("Failed to read sensor data");
      return;
    }

    // Prepare the HTML response
    String html = "<html><body><h1>ESP8266 Temperature and Humidity</h1>";
    html += "<p>Date: " + currentDate + "</p>";
    html += "<p>Time: " + currentTime + "</p>";
    html += "<p>Temperature: " + String(temperature) + " &deg;C</p>";
    html += "<p>Humidity: " + String(humidity) + " %</p>";
    html += "</body></html>";

    // Send the HTTP response
    client.print("HTTP/1.1 200 OK\r\n");
    client.print("Content-Type: text/html\r\n");
    client.print("\r\n");
    client.print(html);
    
    delay(1000);  // Update every second
  }
}
